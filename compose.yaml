version: '3'

services:
  django:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8000:8000"
    healthcheck:
      test: "curl --fail http://127.0.0.1:8000/healthcheck"
      interval: 60s
      timeout: 1s
      retries: 10
    command:
      - "gunicorn"
      - "--bind"
      - ":${APP_PORT}"
      - "--workers"
      - "${WORKER_COUNT}"
      - "tech_service.wsgi:application"

  migration:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
      django:
        condition: service_healthy
    env_file:
      - .env
    command: 'python manage.py migrate'

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    healthcheck:
      test:  [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 1s
      retries: 5
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
    env_file:
      - .env

  redis:
    image: redis:7.2.2
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 1s
      retries: 5
    volumes:
      - ./.data/redis:/data

  celery:
    build: .
    command: celery --app=tech_service worker --loglevel=debug
    depends_on:
      - redis
